/*
 * This file is part of the TYPO3 CMS project.
 *
 * It is free software; you can redistribute it and/or modify it under
 * the terms of the GNU General Public License, either version 2
 * of the License, or any later version.
 *
 * For the full copyright and license information, please read the
 * LICENSE.txt file that was distributed with this source code.
 *
 * The TYPO3 project - inspiring people to share!
 */
define(["require","exports","../AbstractInteractableModule","jquery","../../Router","../../Renderable/ProgressBar","../../Renderable/InfoBox","../../Renderable/Severity","TYPO3/CMS/Backend/Modal","TYPO3/CMS/Backend/Notification"],function(e,t,a,s,n,r,o,i,l,c){"use strict";return new class extends a.AbstractInteractableModule{constructor(){super(...arguments),this.selectorAnalyzeTrigger=".t3js-databaseAnalyzer-analyze",this.selectorExecuteTrigger=".t3js-databaseAnalyzer-execute",this.selectorOutputContainer=".t3js-databaseAnalyzer-output",this.selectorSuggestionBlock=".t3js-databaseAnalyzer-suggestion-block",this.selectorSuggestionList=".t3js-databaseAnalyzer-suggestion-list",this.selectorSuggestionLineTemplate=".t3js-databaseAnalyzer-suggestion-line-template"}initialize(e){this.currentModal=e,this.getData(),e.on("click",".t3js-databaseAnalyzer-suggestion-block-checkbox",e=>{const t=s(e.currentTarget);t.closest("fieldset").find(":checkbox").prop("checked",t.get(0).checked)}),e.on("click",this.selectorAnalyzeTrigger,e=>{e.preventDefault(),this.analyze()}),e.on("click",this.selectorExecuteTrigger,e=>{e.preventDefault(),this.execute()})}getData(){const e=this.getModalBody();s.ajax({url:n.getUrl("databaseAnalyzer"),cache:!1,success:t=>{!0===t.success?(e.empty().append(t.html),l.setButtons(t.buttons),this.analyze()):c.error("Something went wrong")},error:t=>{n.handleAjaxError(t,e)}})}analyze(){const e=this.getModalBody(),t=this.getModalFooter(),a=e.find(this.selectorOutputContainer),l=t.find(this.selectorExecuteTrigger),d=t.find(this.selectorAnalyzeTrigger);a.empty().append(r.render(i.loading,"Analyzing current database schema...","")),d.prop("disabled",!0),l.prop("disabled",!0),a.on("change",'input[type="checkbox"]',()=>{const e=a.find(":checked").length>0;l.prop("disabled",!e)}),s.ajax({url:n.getUrl("databaseAnalyzerAnalyze"),cache:!1,success:t=>{if(!0===t.success){if(Array.isArray(t.status)&&(a.find(".alert-loading").remove(),t.status.forEach(e=>{const t=o.render(e.severity,e.title,e.message);a.append(t)})),Array.isArray(t.suggestions)){t.suggestions.forEach(t=>{const s=e.find(this.selectorSuggestionBlock).clone();s.removeClass(this.selectorSuggestionBlock.substr(1));const n=t.key;s.find(".t3js-databaseAnalyzer-suggestion-block-legend").text(t.label),s.find(".t3js-databaseAnalyzer-suggestion-block-checkbox").attr("id","t3-install-"+n+"-checkbox"),t.enabled&&s.find(".t3js-databaseAnalyzer-suggestion-block-checkbox").attr("checked","checked"),s.find(".t3js-databaseAnalyzer-suggestion-block-label").attr("for","t3-install-"+n+"-checkbox"),t.children.forEach(a=>{const n=e.find(this.selectorSuggestionLineTemplate).children().clone(),r=a.hash,o=n.find(".t3js-databaseAnalyzer-suggestion-line-checkbox");o.attr("id","t3-install-db-"+r).attr("data-hash",r),t.enabled&&o.attr("checked","checked"),n.find(".t3js-databaseAnalyzer-suggestion-line-label").attr("for","t3-install-db-"+r),n.find(".t3js-databaseAnalyzer-suggestion-line-statement").text(a.statement),void 0!==a.current&&(n.find(".t3js-databaseAnalyzer-suggestion-line-current-value").text(a.current),n.find(".t3js-databaseAnalyzer-suggestion-line-current").show()),void 0!==a.rowCount&&(n.find(".t3js-databaseAnalyzer-suggestion-line-count-value").text(a.rowCount),n.find(".t3js-databaseAnalyzer-suggestion-line-count").show()),s.find(this.selectorSuggestionList).append(n)}),a.append(s.html())});const s=0===a.find(":checked").length;d.prop("disabled",!1),l.prop("disabled",s)}0===t.suggestions.length&&0===t.status.length&&a.append(o.render(i.ok,"Database schema is up to date. Good job!",""))}else c.error("Something went wrong")},error:t=>{n.handleAjaxError(t,e)}})}execute(){const e=this.getModalBody(),t=this.getModuleContent().data("database-analyzer-execute-token"),a=e.find(this.selectorOutputContainer),o=[];a.find(".t3js-databaseAnalyzer-suggestion-line input:checked").each((e,t)=>{o.push(s(t).data("hash"))}),a.empty().append(r.render(i.loading,"Executing database updates...","")),e.find(this.selectorExecuteTrigger).prop("disabled",!0),e.find(this.selectorAnalyzeTrigger).prop("disabled",!0),s.ajax({url:n.getUrl(),method:"POST",data:{install:{action:"databaseAnalyzerExecute",token:t,hashes:o}},cache:!1,success:e=>{!0===e.success&&Array.isArray(e.status)&&e.status.forEach(e=>{c.showMessage(e.title,e.message,e.severity)}),this.analyze()},error:t=>{n.handleAjaxError(t,e)}})}}});