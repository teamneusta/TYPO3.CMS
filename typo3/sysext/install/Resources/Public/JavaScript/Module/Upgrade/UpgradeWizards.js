/*
 * This file is part of the TYPO3 CMS project.
 *
 * It is free software; you can redistribute it and/or modify it under
 * the terms of the GNU General Public License, either version 2
 * of the License, or any later version.
 *
 * For the full copyright and license information, please read the
 * LICENSE.txt file that was distributed with this source code.
 *
 * The TYPO3 project - inspiring people to share!
 */
define(["require","exports","../AbstractInteractableModule","jquery","../../Router","../../Renderable/Severity","../../Renderable/ProgressBar","../../Renderable/InfoBox","../../Renderable/FlashMessage","TYPO3/CMS/Backend/Notification","TYPO3/CMS/Core/SecurityUtility","bootstrap"],function(e,t,s,r,a,i,d,o,n,l,c){"use strict";class p extends s.AbstractInteractableModule{constructor(){super(),this.selectorOutputWizardsContainer=".t3js-upgradeWizards-wizards-output",this.selectorOutputDoneContainer=".t3js-upgradeWizards-done-output",this.selectorWizardsBlockingAddsTemplate=".t3js-upgradeWizards-blocking-adds-template",this.selectorWizardsBlockingAddsRows=".t3js-upgradeWizards-blocking-adds-rows",this.selectorWizardsBlockingAddsExecute=".t3js-upgradeWizards-blocking-adds-execute",this.selectorWizardsBlockingCharsetTemplate=".t3js-upgradeWizards-blocking-charset-template",this.selectorWizardsBlockingCharsetFix=".t3js-upgradeWizards-blocking-charset-fix",this.selectorWizardsDoneBodyTemplate=".t3js-upgradeWizards-done-body-template",this.selectorWizardsDoneRows=".t3js-upgradeWizards-done-rows",this.selectorWizardsDoneRowTemplate=".t3js-upgradeWizards-done-row-template table tr",this.selectorWizardsDoneRowMarkUndone=".t3js-upgradeWizards-done-markUndone",this.selectorWizardsDoneRowTitle=".t3js-upgradeWizards-done-title",this.selectorWizardsListTemplate=".t3js-upgradeWizards-list-template",this.selectorWizardsListRows=".t3js-upgradeWizards-list-rows",this.selectorWizardsListRowTemplate=".t3js-upgradeWizards-list-row-template",this.selectorWizardsListRowTitle=".t3js-upgradeWizards-list-row-title",this.selectorWizardsListRowExplanation=".t3js-upgradeWizards-list-row-explanation",this.selectorWizardsListRowExecute=".t3js-upgradeWizards-list-row-execute",this.selectorWizardsInputTemplate=".t3js-upgradeWizards-input",this.selectorWizardsInputTitle=".t3js-upgradeWizards-input-title",this.selectorWizardsInputHtml=".t3js-upgradeWizards-input-html",this.selectorWizardsInputPerform=".t3js-upgradeWizards-input-perform",this.securityUtility=new c}static removeLoadingMessage(e){e.find(".alert-loading").remove()}static renderProgressBar(e){return d.render(i.loading,e,"")}initialize(e){this.currentModal=e,this.getData().done(()=>{this.doneUpgrades()}),e.on("click",this.selectorWizardsDoneRowMarkUndone,e=>{this.markUndone(e.target.dataset.identifier)}),e.on("click",this.selectorWizardsBlockingCharsetFix,()=>{this.blockingUpgradesDatabaseCharsetFix()}),e.on("click",this.selectorWizardsBlockingAddsExecute,()=>{this.blockingUpgradesDatabaseAddsExecute()}),e.on("click",this.selectorWizardsListRowExecute,e=>{this.wizardInput(e.target.dataset.identifier,e.target.dataset.title)}),e.on("click",this.selectorWizardsInputPerform,e=>{this.wizardExecute(e.target.dataset.identifier,e.target.dataset.title)})}getData(){const e=this.getModalBody();return r.ajax({url:a.getUrl("upgradeWizardsGetData"),cache:!1,success:t=>{!0===t.success?(e.empty().append(t.html),this.blockingUpgradesDatabaseCharsetTest()):l.error("Something went wrong")},error:e=>{a.handleAjaxError(e)}})}blockingUpgradesDatabaseCharsetTest(){const e=this.getModalBody(),t=this.findInModal(this.selectorOutputWizardsContainer);t.empty().html(p.renderProgressBar("Checking database charset...")),r.ajax({url:a.getUrl("upgradeWizardsBlockingDatabaseCharsetTest"),cache:!1,success:s=>{p.removeLoadingMessage(t),!0===s.success&&(!0===s.needsUpdate?e.find(this.selectorOutputWizardsContainer).append(e.find(this.selectorWizardsBlockingCharsetTemplate)).clone():this.blockingUpgradesDatabaseAdds())},error:e=>{a.handleAjaxError(e,t)}})}blockingUpgradesDatabaseCharsetFix(){const e=r(this.selectorOutputWizardsContainer);e.empty().html(p.renderProgressBar("Setting database charset to UTF-8...")),r.ajax({url:a.getUrl("upgradeWizardsBlockingDatabaseCharsetFix"),cache:!1,success:t=>{if(p.removeLoadingMessage(e),!0===t.success)Array.isArray(t.status)&&t.status.length>0&&t.status.forEach(t=>{const s=o.render(t.severity,t.title,t.message);e.append(s)});else{const t=n.render(i.error,"Something went wrong","");p.removeLoadingMessage(e),e.append(t)}},error:t=>{a.handleAjaxError(t,e)}})}blockingUpgradesDatabaseAdds(){const e=this.getModalBody(),t=this.findInModal(this.selectorOutputWizardsContainer);t.empty().html(p.renderProgressBar("Check for missing mandatory database tables and fields...")),r.ajax({url:a.getUrl("upgradeWizardsBlockingDatabaseAdds"),cache:!1,success:s=>{if(p.removeLoadingMessage(t),!0===s.success)if(!0===s.needsUpdate){const t=e.find(this.selectorWizardsBlockingAddsTemplate).clone();"object"==typeof s.adds.tables&&s.adds.tables.forEach(e=>{const s="Table: "+this.securityUtility.encodeHtml(e.table);t.find(this.selectorWizardsBlockingAddsRows).append(s,"<br>")}),"object"==typeof s.adds.columns&&s.adds.columns.forEach(e=>{const s="Table: "+this.securityUtility.encodeHtml(e.table)+", Field: "+this.securityUtility.encodeHtml(e.field);t.find(this.selectorWizardsBlockingAddsRows).append(s,"<br>")}),"object"==typeof s.adds.indexes&&s.adds.indexes.forEach(e=>{const s="Table: "+this.securityUtility.encodeHtml(e.table)+", Index: "+this.securityUtility.encodeHtml(e.index);t.find(this.selectorWizardsBlockingAddsRows).append(s,"<br>")}),e.find(this.selectorOutputWizardsContainer).append(t)}else this.wizardsList();else l.error("Something went wrong")},error:e=>{a.handleAjaxError(e,t)}})}blockingUpgradesDatabaseAddsExecute(){const e=this.findInModal(this.selectorOutputWizardsContainer);e.empty().html(p.renderProgressBar("Adding database tables and fields...")),r.ajax({url:a.getUrl("upgradeWizardsBlockingDatabaseExecute"),cache:!1,success:t=>{if(p.removeLoadingMessage(e),!0===t.success)Array.isArray(t.status)&&t.status.length>0&&(t.status.forEach(t=>{const s=o.render(t.severity,t.title,t.message);e.append(s)}),this.wizardsList());else{const t=n.render(i.error,"Something went wrong","");p.removeLoadingMessage(e),e.append(t)}},error:t=>{a.handleAjaxError(t,e)}})}wizardsList(){const e=this.getModalBody(),t=this.findInModal(this.selectorOutputWizardsContainer);t.append(p.renderProgressBar("Loading upgrade wizards...")),r.ajax({url:a.getUrl("upgradeWizardsList"),cache:!1,success:s=>{p.removeLoadingMessage(t);const r=e.find(this.selectorWizardsListTemplate).clone();if(r.removeClass("t3js-upgradeWizards-list-template"),!0===s.success){let t=0,a=0;Array.isArray(s.wizards)&&s.wizards.length>0&&(a=s.wizards.length,s.wizards.forEach(s=>{if(!0===s.shouldRenderWizard){const a=e.find(this.selectorWizardsListRowTemplate).clone();t+=1,a.removeClass("t3js-upgradeWizards-list-row-template"),a.find(this.selectorWizardsListRowTitle).empty().text(s.title),a.find(this.selectorWizardsListRowExplanation).empty().text(s.explanation),a.find(this.selectorWizardsListRowExecute).attr("data-identifier",s.identifier).attr("data-title",s.title),r.find(this.selectorWizardsListRows).append(a)}}),r.find(this.selectorWizardsListRows+" hr:last").remove());let i=100;const d=r.find(".progress-bar");t>0?i=Math.round((a-t)/s.wizards.length*100):d.removeClass("progress-bar-info").addClass("progress-bar-success"),d.removeClass("progress-bar-striped").css("width",i+"%").attr("aria-valuenow",i).find("span").text(i+"%"),e.find(this.selectorOutputWizardsContainer).append(r),this.findInModal(this.selectorWizardsDoneRowMarkUndone).prop("disabled",!1)}else l.error("Something went wrong")},error:e=>{a.handleAjaxError(e,t)}})}wizardInput(e,t){const s=this.getModuleContent().data("upgrade-wizards-input-token"),i=this.getModalBody(),d=this.findInModal(this.selectorOutputWizardsContainer);d.empty().html(p.renderProgressBar('Loading "'+t+'"...')),i.animate({scrollTop:i.scrollTop()-Math.abs(i.find(".t3js-upgrade-status-section").position().top)},250),r.ajax({url:a.getUrl(),method:"POST",data:{install:{action:"upgradeWizardsInput",token:s,identifier:e}},cache:!1,success:e=>{d.empty();const t=i.find(this.selectorWizardsInputTemplate).clone();t.removeClass("t3js-upgradeWizards-input"),!0===e.success&&(Array.isArray(e.status)&&e.status.forEach(e=>{const t=n.render(e.severity,e.title,e.message);d.append(t)}),e.userInput.wizardHtml.length>0&&t.find(this.selectorWizardsInputHtml).html(e.userInput.wizardHtml),t.find(this.selectorWizardsInputTitle).text(e.userInput.title),t.find(this.selectorWizardsInputPerform).attr("data-identifier",e.userInput.identifier).attr("data-title",e.userInput.title)),i.find(this.selectorOutputWizardsContainer).append(t)},error:e=>{a.handleAjaxError(e,d)}})}wizardExecute(e,t){const s=this.getModuleContent().data("upgrade-wizards-execute-token"),i=this.getModalBody(),d={"install[action]":"upgradeWizardsExecute","install[token]":s,"install[identifier]":e};r(this.findInModal(this.selectorOutputWizardsContainer+" form").serializeArray()).each((e,t)=>{d[t.name]=t.value});const n=this.findInModal(this.selectorOutputWizardsContainer);n.empty().html(p.renderProgressBar('Executing "'+t+'"...')),this.findInModal(this.selectorWizardsDoneRowMarkUndone).prop("disabled",!0),r.ajax({method:"POST",data:d,url:a.getUrl(),cache:!1,success:e=>{n.empty(),!0===e.success?(Array.isArray(e.status)&&e.status.forEach(e=>{const t=o.render(e.severity,e.title,e.message);n.append(t)}),this.wizardsList(),i.find(this.selectorOutputDoneContainer).empty(),this.doneUpgrades()):l.error("Something went wrong")},error:e=>{a.handleAjaxError(e,n)}})}doneUpgrades(){const e=this.getModalBody(),t=e.find(this.selectorOutputDoneContainer);t.empty().html(p.renderProgressBar("Loading executed upgrade wizards...")),r.ajax({url:a.getUrl("upgradeWizardsDoneUpgrades"),cache:!1,success:s=>{if(p.removeLoadingMessage(t),!0===s.success){Array.isArray(s.status)&&s.status.length>0&&s.status.forEach(e=>{const s=o.render(e.severity,e.title,e.message);t.append(s)});const r=e.find(this.selectorWizardsDoneBodyTemplate).clone(),a=r.find(this.selectorWizardsDoneRows);let i=!1;Array.isArray(s.wizardsDone)&&s.wizardsDone.length>0&&s.wizardsDone.forEach(t=>{i=!0;const s=e.find(this.selectorWizardsDoneRowTemplate).clone();s.find(this.selectorWizardsDoneRowMarkUndone).attr("data-identifier",t.identifier),s.find(this.selectorWizardsDoneRowTitle).text(t.title),a.append(s)}),Array.isArray(s.rowUpdatersDone)&&s.rowUpdatersDone.length>0&&s.rowUpdatersDone.forEach(t=>{i=!0;const s=e.find(this.selectorWizardsDoneRowTemplate).clone();s.find(this.selectorWizardsDoneRowMarkUndone).attr("data-identifier",t.identifier),s.find(this.selectorWizardsDoneRowTitle).text(t.title),a.append(s)}),i&&(e.find(this.selectorOutputDoneContainer).append(r),this.findInModal(this.selectorWizardsDoneRowMarkUndone).prop("disabled",!0))}else l.error("Something went wrong")},error:e=>{a.handleAjaxError(e,t)}})}markUndone(e){const t=this.getModuleContent().data("upgrade-wizards-mark-undone-token"),s=this.getModalBody(),i=this.findInModal(this.selectorOutputDoneContainer);i.empty().html(p.renderProgressBar("Marking upgrade wizard as undone...")),r.ajax({url:a.getUrl(),method:"POST",data:{install:{action:"upgradeWizardsMarkUndone",token:t,identifier:e}},cache:!1,success:e=>{i.empty(),s.find(this.selectorOutputDoneContainer).empty(),!0===e.success&&Array.isArray(e.status)?e.status.forEach(e=>{l.success(e.message),this.doneUpgrades(),this.blockingUpgradesDatabaseCharsetTest()}):l.error("Something went wrong")},error:e=>{a.handleAjaxError(e,i)}})}}return new p});